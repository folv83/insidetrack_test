SET DEFINE OFF;


--Very important!
-----------------
--First: you have to upload the content of the excel file dataset.xlsx into the table ITD_TT_EXCEL_DATASET_CONTENT (by some SQL client wizard)
--Then: you can execute this script


--Filling table of cities
INSERT INTO ITD_MT_CITY(ID_CITY, CO_CITY)
SELECT ITD_SEQ_CITY.NEXTVAL, X.CITY
FROM
(
	SELECT SUBSTR(NA_CUSTOMER_LEAF, INSTR(NA_CUSTOMER_LEAF, '-', 1) + 2, 100) AS CITY
	FROM ITD_TT_EXCEL_DATASET_CONTENT
	UNION
	SELECT SUBSTR(NA_DISTRIBUTOR_LEAF, INSTR(NA_DISTRIBUTOR_LEAF, '-', 1) + 2, 100)  AS CITY
	FROM ITD_TT_EXCEL_DATASET_CONTENT
	ORDER BY 1
) X;


--Filling table of customers root
INSERT INTO ITD_MT_CUSTOMER_ROOT(ID_CUSTOMER_ROOT, NA_CUSTOMER_ROOT)
SELECT ITD_SEQ_CUSTOMER_ROOT.NEXTVAL, X.CUSTOMER_ROOT
FROM 
(
	SELECT DISTINCT NA_CUSTOMER_ROOT AS CUSTOMER_ROOT
	FROM ITD_TT_EXCEL_DATASET_CONTENT
	ORDER BY 1
) X;


--Filling table of customers leaf
INSERT INTO ITD_MT_CUSTOMER_LEAF(ID_CUSTOMER_LEAF, ID_CUSTOMER_ROOT, ID_CITY)
SELECT ITD_SEQ_CUSTOMER_LEAF.NEXTVAL, X.ID_CUSTOMER_ROOT, X.ID_CITY
FROM 
(
	SELECT DISTINCT CR.ID_CUSTOMER_ROOT, C.ID_CITY
	FROM ITD_TT_EXCEL_DATASET_CONTENT E
	INNER JOIN ITD_MT_CUSTOMER_ROOT CR ON CR.NA_CUSTOMER_ROOT = E.NA_CUSTOMER_ROOT
	INNER JOIN ITD_MT_CITY C ON C.CO_CITY = SUBSTR(E.NA_CUSTOMER_LEAF, INSTR(E.NA_CUSTOMER_LEAF, '-', 1) + 2, 100)
	ORDER BY 1, 2
) X;


--Filling table of distributors root
INSERT INTO ITD_MT_DISTRIBUTOR_ROOT(ID_DISTRIBUTOR_ROOT, NA_DISTRIBUTOR_ROOT)
SELECT ITD_SEQ_DISTRIBUTOR_ROOT.NEXTVAL, X.DISTRIBUTOR_ROOT
FROM 
(
	SELECT DISTINCT NA_DISTRIBUTOR_ROOT AS DISTRIBUTOR_ROOT
	FROM ITD_TT_EXCEL_DATASET_CONTENT
	ORDER BY 1
) X;


--Filling table of distributors leaf
INSERT INTO ITD_MT_DISTRIBUTOR_LEAF(ID_DISTRIBUTOR_LEAF, ID_DISTRIBUTOR_ROOT, ID_CITY)
SELECT ITD_SEQ_DISTRIBUTOR_LEAF.NEXTVAL, X.ID_DISTRIBUTOR_ROOT, X.ID_CITY
FROM 
(
	SELECT DISTINCT DR.ID_DISTRIBUTOR_ROOT, C.ID_CITY
	FROM ITD_TT_EXCEL_DATASET_CONTENT E
	INNER JOIN ITD_MT_DISTRIBUTOR_ROOT DR ON DR.NA_DISTRIBUTOR_ROOT = E.NA_DISTRIBUTOR_ROOT
	INNER JOIN ITD_MT_CITY C ON C.CO_CITY = SUBSTR(E.NA_DISTRIBUTOR_LEAF, INSTR(E.NA_DISTRIBUTOR_LEAF, '-', 1) + 2, 100)
	ORDER BY 1, 2
) X;


--Filling table of manufacturers
INSERT INTO ITD_MT_MANUFACTURER(ID_MANUFACTURER, NA_MANUFACTURER)
SELECT ITD_SEQ_MANUFACTURER.NEXTVAL, X.NA_MANUFACTURER
FROM
(
	SELECT DISTINCT NA_MANUFACTURER
	FROM ITD_TT_EXCEL_DATASET_CONTENT
	ORDER BY 1
) X;


--Filling table of categories
INSERT INTO ITD_MT_CATEGORY(ID_CATEGORY, NA_CATEGORY)
SELECT ITD_SEQ_CATEGORY.NEXTVAL, X.NA_CATEGORY
FROM
(
	SELECT DISTINCT NA_CATEGORY
	FROM ITD_TT_EXCEL_DATASET_CONTENT
	ORDER BY 1
) X;


--Filling table of unit types
INSERT INTO ITD_MT_UNIT_TYPE(ID_UNIT_TYPE, NA_UNIT_TYPE)
SELECT ITD_SEQ_UNIT_TYPE.NEXTVAL, X.NA_UNIT_TYPE
FROM
(
	SELECT DISTINCT NA_UNIT_TYPE
	FROM ITD_TT_EXCEL_DATASET_CONTENT
	ORDER BY 1
) X;


--Filling table of pack sizes
INSERT INTO ITD_MT_PACK_SIZE(ID_PACK_SIZE, NA_PACK_SIZE)
SELECT ITD_SEQ_PACK_SIZE.NEXTVAL, X.NA_PACK_SIZE
FROM
(
	SELECT DISTINCT NA_PACK_SIZE
	FROM ITD_TT_EXCEL_DATASET_CONTENT
	ORDER BY 1
) X;


--Filling table of products
INSERT INTO ITD_MT_PRODUCT(ID_PRODUCT, DE_PRODUCT, ID_MANUFACTURER, ID_CATEGORY, ID_UNIT_TYPE, ID_PACK_SIZE, AM_PRICE)
SELECT ITD_SEQ_PRODUCT.NEXTVAL, X.DE_PRODUCT, X.ID_MANUFACTURER, X.ID_CATEGORY, X.ID_UNIT_TYPE, X.ID_PACK_SIZE, X.AM_PRICE
FROM
(
	SELECT DISTINCT E.DE_PRODUCT, M.ID_MANUFACTURER, C.ID_CATEGORY, UT.ID_UNIT_TYPE, PS.ID_PACK_SIZE, E.AM_PRICE
	FROM ITD_TT_EXCEL_DATASET_CONTENT E
	INNER JOIN ITD_MT_MANUFACTURER M ON M.NA_MANUFACTURER = E.NA_MANUFACTURER
	INNER JOIN ITD_MT_CATEGORY C ON C.NA_CATEGORY = E.NA_CATEGORY
	INNER JOIN ITD_MT_UNIT_TYPE UT ON UT.NA_UNIT_TYPE = E.NA_UNIT_TYPE
	INNER JOIN ITD_MT_PACK_SIZE PS ON PS.NA_PACK_SIZE = E.NA_PACK_SIZE
	ORDER BY 1
) X;


--Filling table of purchases
INSERT INTO ITD_MT_PURCHASE(ID_PURCHASE, CO_INVOICE, DA_PURCHASE, ID_CUSTOMER_ROOT, ID_CUSTOMER_LEAF, NU_PRODUCTS, AM_TOTAL)
SELECT ITD_SEQ_PURCHASE.NEXTVAL, X.CO_INVOICE, X.DA_PURCHASE, X.ID_CUSTOMER_ROOT, X.ID_CUSTOMER_LEAF, X.NU_PRODUCTS, X.AM_TOTAL
FROM
(
	SELECT E.CO_INVOICE, E.DA_PURCHASE, CR.ID_CUSTOMER_ROOT, CL.ID_CUSTOMER_LEAF, COUNT(1) AS NU_PRODUCTS, SUM(E.AM_TOTAL) AS AM_TOTAL
	FROM ITD_TT_EXCEL_DATASET_CONTENT E
	INNER JOIN ITD_MT_CUSTOMER_ROOT CR ON CR.NA_CUSTOMER_ROOT = E.NA_CUSTOMER_ROOT
	INNER JOIN ITD_MT_CUSTOMER_LEAF CL ON CL.ID_CUSTOMER_ROOT = CR.ID_CUSTOMER_ROOT
	INNER JOIN ITD_MT_CITY C ON C.ID_CITY = CL.ID_CITY
	WHERE E.NA_CUSTOMER_LEAF = CR.NA_CUSTOMER_ROOT || ' - ' || C.CO_CITY
	GROUP BY E.CO_INVOICE, E.DA_PURCHASE, CR.ID_CUSTOMER_ROOT, CL.ID_CUSTOMER_LEAF
	ORDER BY 1
) X;


--Filling table of products per purchase
INSERT INTO ITD_MT_PRODUCT_PURCHASE(ID_PRODUCT_PURCHASE, ID_PURCHASE, ID_PRODUCT, ID_MANUFACTURER, ID_CATEGORY, ID_UNIT_TYPE, ID_PACK_SIZE, ID_DISTRIBUTOR_ROOT, ID_DISTRIBUTOR_LEAF, AM_QUANTITY, AM_PRICE, AM_TOTAL)
SELECT ITD_SEQ_PRODUCT_PURCHASE.NEXTVAL, X.ID_PURCHASE, X.ID_PRODUCT, X.ID_MANUFACTURER, X.ID_CATEGORY, X.ID_UNIT_TYPE, X.ID_PACK_SIZE, X.ID_DISTRIBUTOR_ROOT, X.ID_DISTRIBUTOR_LEAF, X.AM_QUANTITY, X.AM_PRICE, X.AM_TOTAL
FROM
(
	SELECT P.ID_PURCHASE, PROD.ID_PRODUCT, PROD.ID_MANUFACTURER, PROD.ID_CATEGORY, PROD.ID_UNIT_TYPE, PROD.ID_PACK_SIZE, DR.ID_DISTRIBUTOR_ROOT, DL.ID_DISTRIBUTOR_LEAF, E.AM_QUANTITY, E.AM_PRICE, E.AM_TOTAL
	FROM ITD_TT_EXCEL_DATASET_CONTENT E
	INNER JOIN ITD_MT_PURCHASE P ON P.CO_INVOICE = E.CO_INVOICE
	INNER JOIN ITD_MT_PRODUCT PROD ON PROD.DE_PRODUCT = E.DE_PRODUCT
	INNER JOIN ITD_MT_DISTRIBUTOR_ROOT DR ON DR.NA_DISTRIBUTOR_ROOT = E.NA_DISTRIBUTOR_ROOT
	INNER JOIN ITD_MT_DISTRIBUTOR_LEAF DL ON DL.ID_DISTRIBUTOR_ROOT = DR.ID_DISTRIBUTOR_ROOT
	INNER JOIN ITD_MT_CITY C ON C.ID_CITY = DL.ID_CITY
	WHERE E.NA_DISTRIBUTOR_LEAF = DR.NA_DISTRIBUTOR_ROOT || ' - ' || C.CO_CITY
	ORDER BY 1, 2
) X;
